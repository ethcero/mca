---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
spec:
  podSelector: {}
  policyTypes:
  - Ingress

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-server-to-mongo
spec:
  podSelector:
    matchLabels:
      app: cyo-practica2
      server: mongo
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: cyo-practica2
            server: server
      ports:
      - protocol: TCP
        port: 27017

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-server-to-rabbit
spec:
  podSelector:
    matchLabels:
      app: cyo-practica2
      server: rabbitmq
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: cyo-practica2
            server: server
      ports:
      - protocol: TCP
        port: 5672

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-worker-to-rabbit
spec:
  podSelector:
    matchLabels:
      app: cyo-practica2
      server: rabbitmq
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: cyo-practica2
            server: worker
      ports:
      - protocol: TCP
        port: 5672


---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-worker-to-mysql
spec:
  podSelector:
    matchLabels:
      app: cyo-practica2
      server: mysql
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: cyo-practica2
            server: worker
      ports:
      - protocol: TCP
        port: 3306

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-worker-to-externalservice
spec:
  podSelector:
    matchLabels:
      app: cyo-practica2
      server: externalservice
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: cyo-practica2
            server: worker
      ports:
      - protocol: TCP
        port: 8082